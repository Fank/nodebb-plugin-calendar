{"version":3,"sources":["../../src/client/index.js"],"names":["lang","config","userLang","defaultLang","jQuery","fn","size","length","begin","momentLang","window","requirejs","composer","formatting","translator","$","document","ready","Translator","ajaxify","loadTemplate","template","translate","html","append","datetimepicker","icons","time","date","up","down","previous","next","today","clear","close","allowInputToggle","locale","sideBySide","useCurrent","createEvent","prepareFormattingTools","addButtonDispatch","textarea","$textarea","oldVal","val","oldEvent","replace","event","text","test","newVal","trigger","on","__webpack_public_path__","RELATIVE_PATH","toLowerCase","require","e","split","er","Error"],"mappings":"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","file":"index.js","sourcesContent":["import 'eonasdan-bootstrap-datetimepicker';\nimport moment from 'moment';\n\nimport './locationHistory';\nimport rawTemplate from './templates';\nimport setupComposerButton from './setupComposerButton';\nimport createEventFactory from './createEvent';\nimport parse, { inPost } from '../lib/parse';\nimport initResponses from './responses';\nimport initTranslation from './clientSideTranslation';\nimport initTranslatorModule from '../lib/translatorModule';\n\nconst lang = config.userLang || config.defaultLang;\njQuery.fn.size = jQuery.fn.size || function size() { return this.length; };\n\nconst begin = (momentLang) => {\n  window.requirejs([\n    'composer',\n    'composer/formatting',\n    'translator',\n  ], (composer, formatting, translator) =>\n  $(document).ready(() => {\n    initTranslatorModule(translator.Translator);\n    initTranslation(translator.Translator);\n\n    ajaxify.loadTemplate('partials/calendar/event-creation-modal', template =>\n    translator.translate(template, lang, (html) => {\n      $('body').append(html);\n\n      setupComposerButton(composer, translator);\n      $('.plugin-calendar-event-editor-date').datetimepicker({\n        icons: {\n          time: 'fa fa-clock-o',\n          date: 'fa fa-calendar',\n          up: 'fa fa-arrow-up',\n          down: 'fa fa-arrow-down',\n          previous: 'fa fa-arrow-left',\n          next: 'fa fa-arrow-right',\n          today: 'fa fa-crosshairs',\n          clear: 'fa fa-trash',\n          close: 'fa fa-times',\n        },\n        allowInputToggle: true,\n        locale: momentLang,\n        sideBySide: true,\n        useCurrent: true,\n      });\n      const createEvent = createEventFactory();\n\n      const prepareFormattingTools = () => {\n        if (!formatting) {\n          return;\n        }\n\n        formatting.addButtonDispatch('plugin-calendar-event', (textarea) => {\n          const $textarea = $(textarea);\n          const oldVal = $textarea.val();\n          const oldEvent = parse(oldVal.replace(/\\[(\\/?)event-invalid\\]/g, '[$1event]'));\n          createEvent(oldEvent || {}, (event) => {\n            const text = event ? rawTemplate(event) : '';\n            if (inPost.test(oldVal)) {\n              const newVal = oldVal.replace(\n                /\\[event(?:-invalid)?\\][\\s\\S]+\\[\\/event(?:-invalid)?\\]/g,\n                text\n              );\n              $textarea.val(newVal);\n            } else {\n              $textarea.val(`${oldVal}\\n\\n${text}`);\n            }\n            $textarea.trigger('input');\n          });\n        });\n      };\n\n      $(window).on('action:composer.enhanced', prepareFormattingTools);\n\n      initResponses();\n    }));\n  }));\n};\n\n__webpack_public_path__ = `${RELATIVE_PATH}/plugins/nodebb-plugin-calendar/bundles/`; // eslint-disable-line\n\nconst momentLang = lang.toLowerCase().replace(/_/g, '-');\n\ntry {\n  if (momentLang === 'en-us') {\n    begin('en-us');\n  } else {\n    require(`bundle-loader!moment/locale/${momentLang}`)(() => { // eslint-disable-line\n      moment.locale(momentLang);\n      begin(momentLang);\n    });\n  }\n} catch (e) {\n  try {\n    require(`bundle-loader!moment/locale/${momentLang.split('-')[0]}`)(() => { // eslint-disable-line\n      moment.locale(momentLang);\n      begin(momentLang);\n    });\n  } catch (er) {\n    begin('en-us');\n    throw Error(`could not load locale data (${momentLang}) for moment`);\n  }\n}\n"]}