{"version":3,"sources":["../../src/client/setupComposerButton.js"],"names":["composer","translator","onChange","data","posts","active","socket","emit","e","canPost","$","find","parent","toggle","alterSubmit","uuid","comp","write","eventExisted","test","val","button","orig","_data","click","map","x","handler","trigger","self","forEach","call","off","on","onClick","text","translate","question","bootbox","confirm","okay","window","setTimeout","document","body"],"mappings":";;;;;;AAAA;;kBAEe,CAACA,QAAD,EAAWC,UAAX,KAA0B;AACvC,QAAMC,WAAW,MAAM;AACrB,UAAMC,OAAOH,SAASI,KAAT,CAAeJ,SAASK,MAAxB,CAAb;AACAC,WAAOC,IAAP,CAAY,+BAAZ,EAA6CJ,IAA7C,EAAmD,CAACK,CAAD,EAAIC,OAAJ,KAAgB;AACjEC,QAAG,aAAYV,SAASK,MAAO,EAA/B,EACGM,IADH,CACQ,sCADR,EAEGC,MAFH,GAGGC,MAHH,CAGUJ,OAHV;AAID,KALD;AAMD,GARD;;AAUA,QAAMK,cAAc,MAAM;AACxB,UAAMC,OAAOf,SAASK,MAAtB;AACA,UAAMW,OAAON,EAAG,aAAYK,IAAK,EAApB,CAAb;AACA,UAAME,QAAQD,KAAKL,IAAL,CAAU,iCAAV,CAAd;AACA,UAAMO,eAAe,cAAOC,IAAP,CAAYF,MAAMG,GAAN,EAAZ,CAArB;;AAEA,QAAIF,YAAJ,EAAkB;AAChB,YAAMG,SAASL,KAAKL,IAAL,CAAU,0BAAV,CAAf;;AAEA,YAAMW,OAAOZ,EAAEa,KAAF,CAAQF,OAAO,CAAP,CAAR,EAAmB,QAAnB,EAA6BG,KAA7B,CAAmCC,GAAnC,CAAuCC,KAAKA,EAAEC,OAA9C,CAAb,CAHgB,CAGqD;AACrE,YAAMC,UAAU,CAACC,IAAD,EAAOrB,CAAP,KAAa;AAC3Bc,aAAKQ,OAAL,CAAcH,OAAD,IAAa;AACxBA,kBAAQI,IAAR,CAAaF,IAAb,EAAmBrB,CAAnB;AACD,SAFD;AAGD,OAJD;AAKAa,aAAOW,GAAP,CAAW,OAAX,EAAoBC,EAApB,CAAuB,OAAvB,EAAgC,SAASC,OAAT,CAAiB1B,CAAjB,EAAoB;AAClD,cAAM2B,OAAOlB,MAAMG,GAAN,EAAb;AACA,YAAI,CAAC,cAAOD,IAAP,CAAYgB,IAAZ,CAAL,EAAwB;AACtBlC,qBAAWmC,SAAX,CAAqB,mCAArB,EAA2DC,QAAD,IAAc;AACtEC,oBAAQC,OAAR,CAAgBF,QAAhB,EAA2BG,IAAD,IAAU;AAClC,kBAAIA,IAAJ,EAAU;AACRZ,wBAAQ,IAAR,EAAcpB,CAAd;AACD;AACF,aAJD;AAKD,WAND;AAOD,SARD,MAQO;AACLoB,kBAAQ,IAAR,EAAcpB,CAAd;AACD;AACF,OAbD;AAcD;AACF,GA9BD;;AAgCAE,IAAE+B,MAAF,EAAUR,EAAV,CAAa,6BACX,4BADW,GAEX,4BAFF,EAEgC,MAAM;AACpCS,eAAW,MAAM;AACfxC;AACAY;AACD,KAHD,EAGG,GAHH;AAID,GAPD;AAQAJ,IAAEiC,SAASC,IAAX,EAAiBX,EAAjB,CAAoB,QAApB,EAA8B,0BAA9B,EAA0D/B,QAA1D;AACD,C","file":"setupComposerButton.js","sourcesContent":["import { inPost } from '../lib/parse';\n\nexport default (composer, translator) => {\n  const onChange = () => {\n    const data = composer.posts[composer.active];\n    socket.emit('plugins.calendar.canPostEvent', data, (e, canPost) => {\n      $(`#cmp-uuid-${composer.active}`)\n        .find('.plugin-calendar-composer-edit-event')\n        .parent()\n        .toggle(canPost);\n    });\n  };\n\n  const alterSubmit = () => {\n    const uuid = composer.active;\n    const comp = $(`#cmp-uuid-${uuid}`);\n    const write = comp.find('.write-container textarea.write');\n    const eventExisted = inPost.test(write.val());\n\n    if (eventExisted) {\n      const button = comp.find('.composer-submit:visible');\n\n      const orig = $._data(button[0], 'events').click.map(x => x.handler); // eslint-disable-line\n      const trigger = (self, e) => {\n        orig.forEach((handler) => {\n          handler.call(self, e);\n        });\n      };\n      button.off('click').on('click', function onClick(e) {\n        const text = write.val();\n        if (!inPost.test(text)) {\n          translator.translate('[[calendar:confirm_delete_event]]', (question) => {\n            bootbox.confirm(question, (okay) => {\n              if (okay) {\n                trigger(this, e);\n              }\n            });\n          });\n        } else {\n          trigger(this, e);\n        }\n      });\n    }\n  };\n\n  $(window).on('action:composer.post.new' +\n    ' action:composer.post.edit' +\n    ' action:composer.topic.new', () => {\n    setTimeout(() => {\n      onChange();\n      alterSubmit();\n    }, 400);\n  });\n  $(document.body).on('change', '.composer .category-list', onChange);\n};\n"]}