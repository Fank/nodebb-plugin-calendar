{"version":3,"sources":["../../src/lib/icals.js"],"names":["p","promisify","db","require","main","utils","sortedSetAdd","sortedSetCard","setObject","getObjects","getSortedSetRange","tmpDir","tmpdir","join","sep","mkdir","catch","addICal","data","icalId","generateUUID","count","err","ical","getICals","keys","icals","map","key","i","length","_key","getICalBody","body","readFile","downloadICal","url","targetFile","writeFile","updateICalJob","all","e","console","error"],"mappings":"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","file":"icals.js","sourcesContent":["import fs from 'async-file';\nimport Promise from 'bluebird';\nimport {CronJob} from 'cron';\nimport rp from 'request-promise';\nimport os from 'os';\nimport path from 'path';\n\nconst p = Promise.promisify;\nconst db = require.main.require('./src/database');\nconst utils = require.main.require('./public/src/utils');\n\nconst sortedSetAdd = p(db.sortedSetAdd);\nconst sortedSetCard = p(db.sortedSetCard);\nconst setObject = p(db.setObject);\nconst getObjects = p(db.getObjects);\nconst getSortedSetRange = p(db.getSortedSetRange);\n\nconst tmpDir = [os.tmpdir(), \"nodebb-calendar\"].join(path.sep);\nfs.mkdir(tmpDir).catch(() => {});\n\nconst addICal = async (data) => {\n  const icalId = utils.generateUUID();\n  const count = await sortedSetCard('plugins:calendar:icals');\n  const err = await sortedSetAdd('plugins:calendar:icals', count+1, icalId);\n  const ical = await setObject('plugins:calendar:ical:' + icalId, data);\n};\n\nconst getICals = async () => {\n  const keys = await getSortedSetRange('plugins:calendar:icals', 0, -1);\n  const icals = await getObjects(keys.map((key) => 'plugins:calendar:ical:' + key));\n  for (let i = 0; i < icals.length; i++) {\n    icals[i]._key = keys[i];\n  }\n  return icals;\n};\n\nconst getICalBody = async (ical) => {\n  const body = await fs.readFile([tmpDir, ical._key + \".ical\"].join(path.sep));\n  return body;\n}\n\nconst downloadICal = async (ical) => {\n  const body = await rp(ical.url);\n  const targetFile = [tmpDir, ical._key + \".ical\"].join(path.sep);\n  await fs.writeFile(targetFile, body);\n};\n\nconst updateICalJob = new CronJob(\n  '00 00 */12 * * *',\n  async () => {\n    const icals = await getICals();\n    await Promise.all(icals.map(async (ical) => {\n      try {\n        await downloadICal(ical);\n      } catch(e) {\n        console.error(\"iCal download failed \" + ical._key);\n        return false;\n      }\n      return true;\n    }));\n  },\n  null,\n  true,\n  null,\n  null,\n  true\n);\n\nexport {\n  addICal,\n  getICals,\n  getICalBody,\n};\n"]}