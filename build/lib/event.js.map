{"version":3,"sources":["../../src/lib/event.js"],"names":["db","require","main","plugins","posts","p","promisify","sortedSetAdd","sortedSetRemove","getSortedSetRangeByScore","getSortedSetRange","setObject","getObject","getObjects","deleteKey","delete","exists","fireHook","getCidsByPids","getCidByPid","listKey","listExternalKey","listByEndKey","saveEvent","event","objectKey","pid","endDate","repeats","all","startDate","deleteEvent","data","post","getEventsByDate","Infinity","byStart","byEnd","keys","filter","includes","x","events","cids","map","i","cid","parseInt","JSON","parse","mandatory","allday","getExternalEventsByDate","icals","preparedEvents","ical","body","jcalData","toString","vcalendar","Component","vevents","getAllSubcomponents","vevent","dtstart","getFirstPropertyValue","dtend","toUnixTime","summary","location","url","description","replace","external","source","name","day","substring","Number","push","e","getAllEvents","getEvent","getEventsEndingAfter","eventExists","escapeEvent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAEA,MAAMA,KAAKC,QAAQC,IAAR,CAAaD,OAAb,CAAqB,gBAArB,CAAX;AACA,MAAME,UAAUF,QAAQC,IAAR,CAAaD,OAAb,CAAqB,eAArB,CAAhB;AACA,MAAMG,QAAQH,QAAQC,IAAR,CAAaD,OAAb,CAAqB,aAArB,CAAd;;AAEA,MAAMI,IAAI,mBAAQC,SAAlB;;AAEA,MAAMC,eAAeF,EAAEL,GAAGO,YAAL,CAArB;AACA,MAAMC,kBAAkBH,EAAEL,GAAGQ,eAAL,CAAxB;AACA,MAAMC,2BAA2BJ,EAAEL,GAAGS,wBAAL,CAAjC;AACA,MAAMC,oBAAoBL,EAAEL,GAAGU,iBAAL,CAA1B;AACA,MAAMC,YAAYN,EAAEL,GAAGW,SAAL,CAAlB;AACA,MAAMC,YAAYP,EAAEL,GAAGY,SAAL,CAAlB;AACA,MAAMC,aAAaR,EAAEL,GAAGa,UAAL,CAAnB;AACA,MAAMC,YAAYT,EAAEL,GAAGe,MAAL,CAAlB;AACA,MAAMC,SAASX,EAAEL,GAAGgB,MAAL,CAAf;AACA,MAAMC,WAAWZ,EAAEF,QAAQc,QAAV,CAAjB;AACA,MAAMC,gBAAgBb,EAAED,MAAMc,aAAR,CAAtB;AACA,MAAMC,cAAcd,EAAED,MAAMe,WAAR,CAApB;;AAEA,MAAMC,UAAU,yBAAhB;AACA,MAAMC,kBAAkB,wBAAxB;AACA,MAAMC,eAAgB,GAAEF,OAAQ,QAAhC;;AAEA,MAAMG,YAAaC,KAAD,IAAW;AAC3B,QAAMC,YAAa,GAAEL,OAAQ,QAAOI,MAAME,GAAI,EAA9C;AACA,QAAMC,UAAUH,MAAMI,OAAN,GAAgBJ,MAAMI,OAAN,CAAcD,OAAd,IAAyB,aAAzC,GAAyDH,MAAMG,OAA/E;AACA,SAAO,mBAAQE,GAAR,CAAY,CACjBtB,aAAaa,OAAb,EAAsBI,MAAMM,SAA5B,EAAuCL,SAAvC,CADiB,EAEjBlB,aAAae,YAAb,EAA2BK,OAA3B,EAAoCF,SAApC,CAFiB,EAGjBd,UAAUc,SAAV,EAAqBD,KAArB,CAHiB,CAAZ,CAAP;AAKD,CARD;;AAUA,MAAMO,cAAeC,IAAD,IAAU;AAC5B,QAAMP,YAAa,GAAEL,OAAQ,QAAOY,KAAKC,IAAL,CAAUP,GAAI,EAAlD;AACA,SAAO,mBAAQG,GAAR,CAAY,CACjBrB,gBAAgBY,OAAhB,EAAyBK,SAAzB,CADiB,EAEjBjB,gBAAgBc,YAAhB,EAA8BG,SAA9B,CAFiB,EAGjBX,UAAUW,SAAV,CAHiB,EAIjB,0BAAmBO,KAAKC,IAAL,CAAUP,GAA7B,CAJiB,CAAZ,CAAP;AAMD,CARD;;AAUA,MAAMQ;AAAA,sCAAkB,WAAOJ,SAAP,EAAkBH,OAAlB,EAA8B;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AAZoD,gBAa3B,MAAM,mBAAQE,GAAR,CAAY;AACzC;AACApB,6BAAyBW,OAAzB,EAAkC,CAAlC,EAAqC,CAAC,CAAtC,EAAyC,CAAzC,EAA4CO,OAA5C,CAFyC;AAGzC;AACAlB,6BAAyBa,YAAzB,EAAuC,CAAvC,EAA0C,CAAC,CAA3C,EAA8CQ,SAA9C,EAAyD,CAACK,QAA1D,CAJyC,CAAZ,CAbqB;AAAA;;AAAA,UAa7CC,OAb6C;AAAA,UAapCC,KAboC;AAmBpD;;AACA,UAAMC,OAAOF,QAAQG,MAAR,CAAe;AAAA,aAAKF,MAAMG,QAAN,CAAeC,CAAf,CAAL;AAAA,KAAf,CAAb;;AAEA,UAAMC,SAAS,MAAM7B,WAAWyB,IAAX,CAArB;;AAEA,UAAMK,OAAO,MAAMzB,cAAcwB,OAAOE,GAAP,CAAW;AAAA,aAASpB,MAAME,GAAf;AAAA,KAAX,CAAd,CAAnB;;AAEA,WAAOgB,OAAOE,GAAP,CAAW,UAACpB,KAAD,EAAQqB,CAAR;AAAA,wCACbrB,KADa;AAEhBsB,aAAKH,KAAKE,CAAL,CAFW;AAGhBf,mBAAWiB,SAASvB,MAAMM,SAAf,EAA0B,EAA1B,CAHK;AAIhBH,iBAASoB,SAASvB,MAAMG,OAAf,EAAwB,EAAxB,CAJO;AAKhBC,iBAAU,OAAOJ,MAAMI,OAAb,KAAyB,QAA1B,GAAsCoB,KAAKC,KAAL,CAAWzB,MAAMI,OAAjB,CAAtC,GAAkEJ,MAAMI,OALjE;AAMhBsB,mBAAW1B,MAAM0B,SAAN,KAAoB,IAApB,IAA4B1B,MAAM0B,SAAN,KAAoB,MAN3C;AAOhBC,gBAAQ3B,MAAM2B,MAAN,KAAiB,IAAjB,IAAyB3B,MAAM2B,MAAN,KAAiB;AAPlC;AAAA,KAAX,CAAP;AASD,GAnCK;;AAAA;AAAA;AAAA;AAAA,IAAN;;AAqCA,MAAMC;AAAA,uCAA0B,WAAOtB,SAAP,EAAkBH,OAAlB,EAA8B;AAC5D,UAAM0B,QAAQ,MAAM,sBAApB;AACA,UAAMC,iBAAiB,EAAvB;;AAEA,UAAM,mBAAQzB,GAAR,CACJwB,MAAMT,GAAN;AAAA,2CAAU,WAAOW,IAAP,EAAgB;AACxB,YAAI;AACF,gBAAMC,OAAO,MAAM,wBAAYD,IAAZ,CAAnB;AACA,gBAAME,WAAW,eAAKR,KAAL,CAAWO,KAAKE,QAAL,EAAX,CAAjB;AACA,gBAAMC,YAAY,IAAI,eAAKC,SAAT,CAAmBH,QAAnB,CAAlB;AACA,gBAAMI,UAAU,MAAM,mBAAQhC,GAAR,CACpB8B,UAAUG,mBAAV,CAA8B,QAA9B,EAAwCvB,MAAxC,CAA+C,UAACwB,MAAD,EAAY;AACzD,kBAAMC,UAAUD,OAAOE,qBAAP,CAA6B,SAA7B,CAAhB;AACA,kBAAMC,QAAQH,OAAOE,qBAAP,CAA6B,OAA7B,CAAd;;AAEA,mBAAQD,QAAQG,UAAR,KAAuB,KAAxB,IAAkCrC,SAAlC,IAAgDoC,MAAMC,UAAN,KAAqB,KAAtB,IAAgCxC,OAAtF;AACD,WALD,EAKGiB,GALH;AAAA,iDAKO,WAAOmB,MAAP,EAAkB;AACvB,oBAAMC,UAAUD,OAAOE,qBAAP,CAA6B,SAA7B,CAAhB;AACA,oBAAMC,QAAQH,OAAOE,qBAAP,CAA6B,OAA7B,CAAd;AACA,oBAAMG,UAAUL,OAAOE,qBAAP,CAA6B,SAA7B,KAA2C,EAA3D;AACA,oBAAMI,WAAWN,OAAOE,qBAAP,CAA6B,UAA7B,KAA4C,EAA7D;AACA,oBAAMK,MAAMP,OAAOE,qBAAP,CAA6B,KAA7B,KAAuC,EAAnD;AACA,oBAAMM,cAAc,CAACR,OAAOE,qBAAP,CAA6B,aAA7B,KAA+C,EAAhD,EACjBO,OADiB,CACT,OADS,EACA,EADA,EAEjBA,OAFiB,CAET,KAFS,EAEF,MAFE,CAApB;;AAIA,qBAAO;AACLC,0BAAU,IADL;AAELC,wBAAQnB,KAAKoB,IAFR;AAGLL,qBAAKA,GAHA;;AAKLnB,wBAAQ,IALH;AAMLyB,qBAAKZ,QAAQN,QAAR,GAAmBmB,SAAnB,CAA6B,CAA7B,EAA+B,EAA/B,CANA;AAOLN,6BAAaA,WAPR;AAQL5C,yBAASmD,OAAOZ,MAAMC,UAAN,KAAqB,KAA5B,CARJ;AASLE,0BAAUA,QATL;AAULM,sBAAMP,OAVD;AAWLtC,2BAAWgD,OAAOd,QAAQG,UAAR,KAAuB,KAA9B;AAXN,eAAP;AAaD,aA5BD;;AAAA;AAAA;AAAA;AAAA,eADoB,CAAtB;;AAgCAb,yBAAeyB,IAAf,wDAAuBlB,OAAvB;AACD,SArCD,CAqCE,OAAOmB,CAAP,EAAU;AACV,iBAAO,KAAP;AACD;AACD,eAAO,IAAP;AACD,OA1CD;;AAAA;AAAA;AAAA;AAAA,SADI,CAAN;;AA8CA,WAAO1B,cAAP;AACD,GAnDK;;AAAA;AAAA;AAAA;AAAA,IAAN;;AAqDA,MAAM2B;AAAA,uCAAe,aAAY;AAC/B,UAAM3C,OAAO,MAAM5B,kBAAkBU,OAAlB,EAA2B,CAA3B,EAA8B,CAAC,CAA/B,CAAnB;AACA,UAAMsB,SAAS,MAAM7B,WAAWyB,IAAX,CAArB;;AAEA,WAAOI,MAAP;AACD,GALK;;AAAA;AAAA;AAAA;AAAA,IAAN;;AAOA,MAAMwC;AAAA,uCAAW,WAAOxD,GAAP,EAAe;AAC9B,UAAMF,QAAQ,MAAMZ,UAAW,GAAEQ,OAAQ,QAAOM,GAAI,EAAhC,CAApB;AACA,UAAMoB,MAAM,MAAM3B,YAAYK,MAAME,GAAlB,CAAlB;;AAEA,sCACKF,KADL;AAEEsB;AAFF;AAID,GARK;;AAAA;AAAA;AAAA;AAAA,IAAN;;AAUA,MAAMqC;AAAA,uCAAuB,WAAOxD,OAAP,EAAmB;AAC9C,UAAMW,OAAO,MAAM7B,yBAAyBa,YAAzB,EAAuC,CAAvC,EAA0C,CAAC,CAA3C,EAA8CK,OAA9C,EAAuD,CAACQ,QAAxD,CAAnB;AACA,UAAMO,SAAS,MAAM7B,WAAWyB,IAAX,CAArB;;AAEA,WAAOI,MAAP;AACD,GALK;;AAAA;AAAA;AAAA;AAAA,IAAN;;AAOA,MAAM0C,cAAc1D,OAAOV,OAAQ,GAAEI,OAAQ,QAAOM,GAAI,EAA7B,CAA3B;;AAEA,MAAM2D;AAAA,wCAAc,WAAO7D,KAAP,EAAiB;AAAA,iBACH,MAAM,mBAAQK,GAAR,CAAY,CAChDZ,SAAS,kBAAT,EAA6BO,MAAM6C,QAAN,IAAkB,EAA/C,CADgD,EAEhDpD,SAAS,kBAAT,EAA6BO,MAAM+C,WAAN,IAAqB,EAAlD,CAFgD,CAAZ,CADH;AAAA;;AAAA,UAC5BF,QAD4B;AAAA,UAClBE,WADkB;;;AAMnC,sCACK/C,KADL;AAEE6C,wBAFF;AAGEE;AAHF;AAKD,GAXK;;AAAA;AAAA;AAAA;AAAA,IAAN;;QAcExC,W,GAAAA,W;QACAR,S,GAAAA,S;QACA6D,W,GAAAA,W;QACAF,Q,GAAAA,Q;QACAhD,e,GAAAA,e;QACAkB,uB,GAAAA,uB;QACAiC,W,GAAAA,W;QACAJ,Y,GAAAA,Y;QACA7D,O,GAAAA,O;QACAC,e,GAAAA,e;QACAC,Y,GAAAA,Y;QACA6D,oB,GAAAA,oB","file":"event.js","sourcesContent":["import Promise from 'bluebird';\nimport ICAL from 'ical.js';\nimport rp from 'request-promise';\nimport { removeAll as removeAllResponses } from './responses';\nimport { getICals, getICalBody } from './icals';\n\nconst db = require.main.require('./src/database');\nconst plugins = require.main.require('./src/plugins');\nconst posts = require.main.require('./src/posts');\n\nconst p = Promise.promisify;\n\nconst sortedSetAdd = p(db.sortedSetAdd);\nconst sortedSetRemove = p(db.sortedSetRemove);\nconst getSortedSetRangeByScore = p(db.getSortedSetRangeByScore);\nconst getSortedSetRange = p(db.getSortedSetRange);\nconst setObject = p(db.setObject);\nconst getObject = p(db.getObject);\nconst getObjects = p(db.getObjects);\nconst deleteKey = p(db.delete);\nconst exists = p(db.exists);\nconst fireHook = p(plugins.fireHook);\nconst getCidsByPids = p(posts.getCidsByPids);\nconst getCidByPid = p(posts.getCidByPid);\n\nconst listKey = 'plugins:calendar:events';\nconst listExternalKey = 'plugins:calendar:icals';\nconst listByEndKey = `${listKey}:byEnd`;\n\nconst saveEvent = (event) => {\n  const objectKey = `${listKey}:pid:${event.pid}`;\n  const endDate = event.repeats ? event.repeats.endDate || 9999999999999 : event.endDate;\n  return Promise.all([\n    sortedSetAdd(listKey, event.startDate, objectKey),\n    sortedSetAdd(listByEndKey, endDate, objectKey),\n    setObject(objectKey, event),\n  ]);\n};\n\nconst deleteEvent = (data) => {\n  const objectKey = `${listKey}:pid:${data.post.pid}`;\n  return Promise.all([\n    sortedSetRemove(listKey, objectKey),\n    sortedSetRemove(listByEndKey, objectKey),\n    deleteKey(objectKey),\n    removeAllResponses(data.post.pid),\n  ]);\n};\n\nconst getEventsByDate = async (startDate, endDate) => {\n  // may be possible eventually\n  // except I need to do the intersection, not the union, of the sets\n  // and I want events whose start date could be before the month starts\n  // and whose end date could be after the month ends\n\n  // const keys = await getSortedSetRangeByScore([\n  //   listKey,\n  //   listByEndKey,\n  // ], 0, -1, startDate, endDate);\n\n  // for now we have to do this,\n  // and hope it isn't too hard on memory\n  const [byStart, byEnd] = await Promise.all([\n    // events that start before end date\n    getSortedSetRangeByScore(listKey, 0, -1, 0, endDate),\n    // events that end after start date\n    getSortedSetRangeByScore(listByEndKey, 0, -1, startDate, +Infinity),\n  ]);\n  // filter to events that only start before the endDate and end after the startDate\n  const keys = byStart.filter(x => byEnd.includes(x));\n\n  const events = await getObjects(keys);\n\n  const cids = await getCidsByPids(events.map(event => event.pid));\n\n  return events.map((event, i) => ({\n    ...event,\n    cid: cids[i],\n    startDate: parseInt(event.startDate, 10),\n    endDate: parseInt(event.endDate, 10),\n    repeats: (typeof event.repeats === 'string') ? JSON.parse(event.repeats) : event.repeats,\n    mandatory: event.mandatory === true || event.mandatory === 'true',\n    allday: event.allday === true || event.allday === 'true',\n  }));\n};\n\nconst getExternalEventsByDate = async (startDate, endDate) => {\n  const icals = await getICals();\n  const preparedEvents = [];\n\n  await Promise.all(\n    icals.map(async (ical) => {\n      try {\n        const body = await getICalBody(ical);\n        const jcalData = ICAL.parse(body.toString());\n        const vcalendar = new ICAL.Component(jcalData);\n        const vevents = await Promise.all(\n          vcalendar.getAllSubcomponents('vevent').filter((vevent) => {\n            const dtstart = vevent.getFirstPropertyValue('dtstart');\n            const dtend = vevent.getFirstPropertyValue('dtend');\n\n            return (dtstart.toUnixTime() + '000') >= startDate && (dtend.toUnixTime() + '999') <= endDate;\n          }).map(async (vevent) => {\n            const dtstart = vevent.getFirstPropertyValue('dtstart');\n            const dtend = vevent.getFirstPropertyValue('dtend');\n            const summary = vevent.getFirstPropertyValue('summary') || '';\n            const location = vevent.getFirstPropertyValue('location') || '';\n            const url = vevent.getFirstPropertyValue('url') || '';\n            const description = (vevent.getFirstPropertyValue('description') || '')\n              .replace(/^\\s+/g, '')\n              .replace(/\\n/g, '<br>');\n\n            return {\n              external: true,\n              source: ical.name,\n              url: url,\n\n              allday: true,\n              day: dtstart.toString().substring(0,10),\n              description: description,\n              endDate: Number(dtend.toUnixTime() + '999'),\n              location: location,\n              name: summary,\n              startDate: Number(dtstart.toUnixTime() + '000'),\n            }\n          })\n        );\n\n        preparedEvents.push(...vevents);\n      } catch (e) {\n        return false;\n      }\n      return true;\n    })\n  );\n\n  return preparedEvents;\n};\n\nconst getAllEvents = async () => {\n  const keys = await getSortedSetRange(listKey, 0, -1);\n  const events = await getObjects(keys);\n\n  return events;\n};\n\nconst getEvent = async (pid) => {\n  const event = await getObject(`${listKey}:pid:${pid}`);\n  const cid = await getCidByPid(event.pid);\n\n  return {\n    ...event,\n    cid,\n  };\n};\n\nconst getEventsEndingAfter = async (endDate) => {\n  const keys = await getSortedSetRangeByScore(listByEndKey, 0, -1, endDate, +Infinity);\n  const events = await getObjects(keys);\n\n  return events;\n};\n\nconst eventExists = pid => exists(`${listKey}:pid:${pid}`);\n\nconst escapeEvent = async (event) => {\n  const [location, description] = await Promise.all([\n    fireHook('filter:parse.raw', event.location || ''),\n    fireHook('filter:parse.raw', event.description || ''),\n  ]);\n\n  return {\n    ...event,\n    location,\n    description,\n  };\n};\n\nexport {\n  deleteEvent,\n  saveEvent,\n  eventExists,\n  getEvent,\n  getEventsByDate,\n  getExternalEventsByDate,\n  escapeEvent,\n  getAllEvents,\n  listKey,\n  listExternalKey,\n  listByEndKey,\n  getEventsEndingAfter,\n};\n"]}